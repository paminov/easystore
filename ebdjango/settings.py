"""
Django settings for ebdjango project.

Generated by 'django-admin startproject' using Django 1.11.14.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import configparser
import boto3
from easystore.helpers import get_db_secret

session = boto3.Session()
s3 = boto3.resource('s3')
for bucket in s3.buckets.iterator():
    if bucket.name.startswith('easystore'):
        s3_bucket = bucket
        break

aws_credentials = session.get_credentials()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Removing config for now while attempting to read all config directly from aws
#AWS config
#aws_config = configparser.ConfigParser()
#aws_config.read(os.getenv('aws_config', os.path.join(BASE_DIR, 'aws.ini')))

AWS_ACCESS_KEY_ID = aws_credentials.access_key
AWS_SECRET_ACCESS_KEY = aws_credentials.secret_key
AWS_TOKEN = aws_credentials.token

#S3 config
AWS_STORAGE_BUCKET_NAME = s3_bucket.name
AWS_S3_CUSTOM_DOMAIN = "{}.s3.amazonaws.com".format(s3_bucket.name)
AWS_STATIC_LOCATION = "private"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'CHANGE_ME'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool( os.environ.get('DJANGO_DEBUG', False) )

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_warrant',
    'easystore'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ebdjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'

WSGI_APPLICATION = 'ebdjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

db_config = get_db_secret()
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
		'NAME': db_config.get('dbname'),
        'USER': db_config.get('username'),
        'PASSWORD': db_config.get('password'),
        'HOST': db_config.get('host'),
        'PORT': db_config.get('port')
    }
}

# Authentiaction
AUTHENTICATION_BACKENDS = [
    'django_warrant.backend.CognitoBackend',
    'django.contrib.auth.backends.ModelBackend'
]

LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = '/'

#COGNITO_USER_POOL_ID = aws_config['cognito']['pool_id']
#COGNITO_APP_ID = aws_config['cognito']['app_id']

cognito = boto3.client('cognito-identity')
for iden_pool in cognito.list_identity_pools(MaxResults=10)['IdentityPools']:
    if iden_pool['IdentityPoolName'] == 'easystore':
        identity_pool_id = iden_pool['IdentityPoolId']
        break

pool_details = cognito.describe_identity_pool(IdentityPoolId=identity_pool_id)

COGNITO_USER_POOL_ID = identity_pool_id
COGNITO_APP_ID = pool_details['CognitoIdentityProviders'][0]['ClientId']

#COGNITO_APP_ID = aws_config['cognito']['app_id']
COGNITO_ATTR_MAPPING =  {
    'email': 'email',
    'given_name': 'first_name',
    'family_name': 'last_name',
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static'
